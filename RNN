# Import required libraries
import tensorflow as tf
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense

# Step 1: Load the IMDb dataset
# Only use the top 10,000 most frequent words
vocab_size = 10000
(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=vocab_size)

# Step 2: Pad sequences to ensure uniform input length
max_len = 200  # maximum length of a review
X_train = pad_sequences(X_train, maxlen=max_len)
X_test = pad_sequences(X_test, maxlen=max_len)

# Step 3: Build the RNN model with LSTM
model = Sequential()

# Embedding layer to convert integers to dense vectors
model.add(Embedding(input_dim=vocab_size, output_dim=32, input_length=max_len))

# LSTM layer to learn sequential dependencies
model.add(LSTM(64))

# Output layer for binary classification
model.add(Dense(1, activation='sigmoid'))

# Step 4: Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Step 5: Train the model
model.fit(X_train, y_train, epochs=3, batch_size=64, validation_split=0.1)

# Step 6: Evaluate the model
test_loss, test_accuracy = model.evaluate(X_test, y_test)
print("Test accuracy:", test_accuracy)
