# Import required libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Step 1: Create a small sample dataset
data = {
    'label': ['ham', 'spam', 'ham', 'ham', 'spam'],
    'message': [
        "Hi there, how are you?",
        "Congratulations! You won a free iPhone. Claim now!",
        "Are we still meeting tomorrow?",
        "Don't forget to bring the book.",
        "Youâ€™ve been selected for a $1000 Walmart gift card. Click now!"
    ]
}
df = pd.DataFrame(data)

# Step 2: Convert labels to numeric
df['label_num'] = df['label'].map({'ham': 0, 'spam': 1})

# Step 3: Convert text data into numerical vectors
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['message'])
y = df['label_num']

# Step 4: Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 5: Train the Multinomial Naive Bayes model
model = MultinomialNB()
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Step 8: Try with a custom input message
sample_message = ["Get your FREE reward now by clicking here!"]
sample_vector = vectorizer.transform(sample_message)
prediction = model.predict(sample_vector)
print("Prediction for sample message:", "Spam" if prediction[0] == 1 else "Not Spam")
