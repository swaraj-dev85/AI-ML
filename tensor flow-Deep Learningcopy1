# Import required libraries
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam

# Step 1: Create a binary classification dataset
X, y = make_classification(n_samples=1000, n_features=10, n_classes=2, random_state=1)

# Step 2: Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Step 3: Build a simple neural network model
model = Sequential()

# Input layer + first hidden layer
model.add(Dense(16, activation='relu', input_shape=(10,)))

# Second hidden layer
model.add(Dense(8, activation='relu'))

# Output layer for binary classification
model.add(Dense(1, activation='sigmoid'))

# Step 4: Compile the model
model.compile(optimizer=Adam(), loss='binary_crossentropy', metrics=['accuracy'])

# Step 5: Train the model
model.fit(X_train, y_train, epochs=20, batch_size=16, validation_split=0.2)

# Step 6: Evaluate the model
loss, accuracy = model.evaluate(X_test, y_test)
print("Test Accuracy:", accuracy)
