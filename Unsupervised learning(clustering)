# Import necessary libraries
import matplotlib.pyplot as plt
from sklearn.datasets import load_digits  # load digits dataset similar to MNIST
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE

# Step 1: Load MNIST-like digits data from sklearn
digits = load_digits()
X = digits.data      # shape: (1797, 64) -> 8x8 images flattened
y = digits.target    # digit labels (0-9)

# Step 2: Apply PCA to reduce dimensions to 2
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

# Step 3: Plot the PCA result
plt.figure(figsize=(8, 6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, cmap='tab10', s=15)
plt.colorbar()
plt.title("PCA: MNIST Digits in 2D")
plt.xlabel("PC 1")
plt.ylabel("PC 2")
plt.grid(True)
plt.show()

# Step 4: Apply t-SNE for better nonlinear visualization
tsne = TSNE(n_components=2, random_state=42, perplexity=30)
X_tsne = tsne.fit_transform(X)

# Step 5: Plot the t-SNE result
plt.figure(figsize=(8, 6))
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=y, cmap='tab10', s=15)
plt.colorbar()
plt.title("t-SNE: MNIST Digits in 2D")
plt.xlabel("Dimension 1")
plt.ylabel("Dimension 2")
plt.grid(True)
plt.show()
