# Importing necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Create dummy data for house price prediction
# Let's assume house size (in square feet) predicts house price
X, y = make_regression(n_samples=100, n_features=1, noise=15, random_state=42)

# Step 2: Split the dataset into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Create the Linear Regression model
model = LinearRegression()

# Step 4: Train the model using the training data
model.fit(X_train, y_train)

# Step 5: Predict house prices using the test data
y_pred = model.predict(X_test)

# Step 6: Print model performance metrics
print("Mean Squared Error (MSE):", mean_squared_error(y_test, y_pred))
print("RÂ² Score (Coefficient of Determination):", r2_score(y_test, y_pred))

# Step 7: Plot the regression line with test data
plt.scatter(X_test, y_test, color='blue', label='Actual Prices')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted Prices')
plt.title('Simple Linear Regression - House Price Prediction')
plt.xlabel('House Size (sq ft)')
plt.ylabel('House Price')
plt.legend()
plt.show()
